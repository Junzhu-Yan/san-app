<template>
  <div class="root">
    <div class="title">{{ title }} {{ info.name }}</div>
    <ul class="obj">
      <li>Len.{{ info.status ? info?.classes.length : '' }}</li>
      <li s-for="item, index in info.classes" class="{{ item.count >= 100 ? 'warn': '' }}">
        name: {{ item.name }} ====> {{ item?.count }}
        <add-btn s-if="item.count < 100" item="{{ item }}" on-click="handleClick(index)"
          >ADD</add-btn
        >
      </li>
      <list list="{{ list }}"></list>
    </ul>
    <div class="reset" on-click="handleReset()">RESET</div>
  </div>
</template>

<script lang="js">
import {Component} from 'san';
import AddButton from './components/AddButton.san';
import List from './components/List.san';

export default class Index extends Component {
  static trimWhitespace = 'all';

  static components = {
    'add-btn': AddButton,
    'list': List
  };

  initData() {
    return {
      title: 'Hello',
      info: {
        name: 'San',
        status: true,
        classes: [
            {
                name: 'fire',
                count: 1,
            },
            {
                name: 'get',
                count: 1,
            },
            {
                name: 'set',
                count: 1,
            },
        ]
      },
      list: ['1','2','3']
    };
  }

  rawItem = null;

  created() {
    this.rawItem = {...this.data.get()};
  }

  handleReset() {
    console.log(this.rawItem);
    this.data.assign(this.rawItem);
  }

  handleClick(index) {
    this.data.set(`info.classes[${index}]['count']`, this.data.get(`info.classes[${index}]?.count`) + 1 );
  }
}
</script>

<style lang="less" scoped>
.root {
  width: 100vw;
  height: 100vh;
  font-size: 2rem;
  background-color: #eff;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  .obj {
    width: 50vw;

    .warn {
      color: red;
    }
  }

  .reset {
    cursor: pointer;
    &:hover {
      background-color: #f5f5f5;
      color: #f00;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      transform: scale(1.2);
      transition: 0.3s;
    }
  }
}

.info {
  font-weight: 700;
  font-size: 36px;
  background-image: linear-gradient(#fff, #fff) !important;
}
</style>
